head: &head
  operationId: getMonitoringSetsHeaders
  description: >
    Use to obtain the headers that would be returned for  `getMonitoringSets`.
    Useful for cache invalidation.
  summary: Get the headers for the current list of Monitoring Sets
  tags: &tags
    - Monitoring Sets
  responses:
    '200': &ok
      description: OK
      headers:
        $ref: ../components/headers/ETag-response.yaml
    '304': &not-modified
      description: The snapshot has not changed.
      headers:
        $ref: ../components/headers/ETag-response.yaml
    '400': &malformed
      description: Malformed request, based on misuse of filters.
      headers: &rate-limited
        $ref: ../components/headers/rate-limited.yaml
    '401': &unauthorized
      description: Unauthorized
      headers: *rate-limited
    '403': &forbidden
      description: Access denied
      headers: *rate-limited
    '404': &not-found
      description: The requested snapshot does not exist
      headers: *rate-limited
    '406': &not-acceptable
      description: Content negotiation failed
      headers: *rate-limited
    '410': &gone
      description: Gone. The requested forecast should be available in archive.
      headers: *rate-limited
    '429': &rate-limit-hit
      $ref: ../components/responses/rate-limit-hit-head.yaml
    '500': &unexpected-error
      description: An unexpected error occurred
      headers: *rate-limited
    default: *unexpected-error
  security: &read-authorization
    - oauth2-primary-flow:
        - read:monitoring-sets
get:
  <<: *head
  operationId: getMonitoringSets
  description: >
    Obtain the list of monitoring sets visible to this user.  

    Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
    and the `ETag` of a previous `GET` response.
  summary: Get the list of known Monitoring Sets
  responses:
    '200':
      <<: *ok
      content:
        application/vnd.trolie.monitoring-set-list.v1+json:
          schema:
            $ref: ../components/schemas/monitoring-set-list.yaml
          example:
            - utilityA-and-neighbors
            - utilityB-and-neighbors
        application/json:
          schema:
            $ref: ../components/schemas/monitoring-set-list.yaml
    '304': *not-modified
    '400':
      <<: *malformed
      content:
        $ref: ../components/responses/content/problem.yaml
    '401': &unauthorized-empty
      <<: *unauthorized
      content: &empty
        $ref: ../components/responses/empty.yaml
    '403': &forbidden-empty
      <<: *forbidden
      content: *empty
    '404': &not-found-empty
      <<: *not-found
      content: *empty
    '406': &not-acceptable-empty
      <<: *not-acceptable
      content: *empty
    '410':
      <<: *gone
      content: *empty
    '429': *rate-limit-hit
    '500': &unexpected-error-message
      <<: *unexpected-error
      content: *empty
    default: *unexpected-error-message
  security: *read-authorization

post:
  operationId: createMonitoringSet
  description: &post_desc Create a new Monitoring Set
  summary: *post_desc
  tags: *tags
  requestBody:
    content:
      application/vnd.trolie.monitoring-set.v1+json:
        schema:
          $ref: ../components/schemas/monitoring-set.yaml
        example:
          id: utilityA-and-neighbors
          description: Utility A's owned lines, as well as surround neighbors.
          transmission-facilities:
            - line1
            - line2
            - line3
      application/json:
        schema:
          $ref: ../components/schemas/monitoring-set.yaml
  responses:
    '201':
      <<: *ok
      description: The monitoring set was created.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/monitoring-set.yaml
        application/vnd.trolie.monitoring-set.v1+json:
          schema:
            $ref: ../components/schemas/monitoring-set.yaml
    '400':
      <<: *malformed
      description: >
        Malformed request, proposal is invalid.  Details are in error
        messages.  
    '401': *unauthorized-empty
    '403': *forbidden-empty
    '404': *not-found-empty
    '406': *not-acceptable-empty
    '413':
      $ref: ../components/responses/payload-too-large.yaml
    '422':
      $ref: ../components/responses/unprocessable.yaml
    '429': *rate-limit-hit
    '500': *unexpected-error-message
    default: *unexpected-error-message
  security:
    - oauth2-primary-flow:
        - write:monitoring-sets
