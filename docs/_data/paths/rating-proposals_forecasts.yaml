head: &head
  operationId: getRatingForecastProposalsHeaders
  description: >
    Use to obtain the headers that would be returned for 
    `getRatingForecastProposals`. Useful for cache invalidation.
  summary: Get headers for the Ratings Provider's proposals
  tags:
    - Rating Proposals
  parameters:
    - $ref: ../components/parameters/offset-period-start.yaml
    - $ref: ../components/parameters/period-end.yaml
    - $ref: ../components/parameters/monitoring-set-filter.yaml
    - $ref: ../components/parameters/segment-filter.yaml
  responses:
    '200': &ok
      description: OK
      headers:
        $ref: ../components/headers/ETag-response.yaml
    '304': &not-modified
      description: The snapshot has not changed.
      headers:
        $ref: ../components/headers/ETag-response.yaml
    '400': &malformed
      description: Malformed request, based on misuse of filters.
      headers: &rate-limited
        $ref: ../components/headers/rate-limited.yaml
    '401': &unauthorized
      description: Unauthorized
      headers: *rate-limited
    '403': &forbidden
      description: Access denied
      headers: *rate-limited
    '404': &not-found
      description: The requested snapshot does not exist
      headers: *rate-limited
    '406': &not-acceptable
      description: Content negotiation failed
      headers: *rate-limited
    '410': &gone
      description: Gone. The requested forecast should be available in archive.
      headers: *rate-limited
    '429': &rate-limit-hit
      $ref: ../components/responses/rate-limit-hit-head.yaml
    '500': &unexpected-error
      description: An unexpected error occurred
      headers: *rate-limited
    default: *unexpected-error
  security: &read-authorization
    - oauth2-primary-flow:
        - read:forecast-proposals
get:
  <<: *head
  operationId: getRatingForecastProposals
  description: >
    Obtain the Ratings Forecasts that *this* Ratings Provider has submitted.  
    Note that the offset-period-start and period-end parameters work in a
    similar fashion to  getLimitsForecastSnapshot, except that it will return
    any proposal that overlaps with the implied period.  

    Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
    and the `ETag` of a previous `GET` response.
  summary: Obtain the Ratings Provider's proposals
  responses:
    '200':
      <<: *ok
      content:
        application/vnd.trolie.rating-forecast-proposal.v1+json:
          schema:
            $ref: ../components/schemas/forecast-rating-proposal.yaml
          example:
            timestamp: '2023-07-12T15:05:43.044267100-07:00'
            ratings-provider: UTILITY-X
            ratings:
              - segment-id: segmentX
                periods:
                  - period-start: '2023-07-12T16:00:00-07:00'
                    status: pending
                    values:
                      - type: normal
                        value:
                          mva: 160
                      - type: ste
                        value:
                          mva: 165
                      - type: lte
                        value:
                          mva: 170
                      - type: dal
                        value:
                          mva: 170
        application/json:
          schema:
            $ref: ../components/schemas/forecast-rating-proposal.yaml
    '304': *not-modified
    '400': *malformed
    '401': &unauthorized-empty
      <<: *unauthorized
      content: &empty
        $ref: ../components/responses/empty.yaml
    '403': &forbidden-empty
      <<: *forbidden
      content: *empty
    '404': &not-found-empty
      <<: *not-found
      content: *empty
    '406': &not-acceptable-empty
      <<: *not-acceptable
      content: *empty
    '410':
      <<: *gone
      content: *empty
    '429': *rate-limit-hit
    '500': &unexpected-error-message
      <<: *unexpected-error
      content: *empty
    default: *unexpected-error-message
  security: *read-authorization

patch:
  <<: *head
  operationId: patchRatingForecastProposal
  description: &patch_desc Update the logged-in provider's ratings Forecast Proposal 
  summary: *patch_desc
  requestBody:
    content:
      application/vnd.trolie.rating-forecast-proposal.v1+json:
        schema:
          $ref: ../components/schemas/forecast-rating-proposal.yaml
        example:
          ratings:
            - segment-id: segmentX
              periods:
                - period-start: '2023-07-12T16:00:00-07:00'
                  values:
                    - type: normal
                      value:
                        mva: 160
                    - type: ste
                      value:
                        mva: 165
                    - type: lte
                      value:
                        mva: 170
                    - type: dal
                      value:
                        mva: 170
      application/json:
        schema:
          $ref: ../components/schemas/forecast-rating-proposal.yaml
  responses:
    '202':
      description: >
        The update was accepted for later processing. Updates to  ratings may
        need to undergo additional validation and propagation to other systems. 
        Status may be retrieved by issuing a GET using
        `getRatingForecastProposals`
      content:
        application/vnd.trolie.rating-forecast-proposal.v1+json:
          schema:
            $ref: ../components/schemas/forecast-rating-proposal.yaml
          example:
            timestamp: '2023-07-12T15:05:43.044267100-07:00'
            ratings-provider: UTILITY-A
            ratings:
              - segment-id: segmentX
                periods:
                  - period-start: '2023-07-12T16:00:00-07:00'
                    status: pending
                    values:
                      - type: normal
                        value:
                          mva: 160
                      - type: ste
                        value:
                          mva: 165
                      - type: lte
                        value:
                          mva: 170
                      - type: dal
                        value:
                          mva: 170
        application/json:
          schema:
            $ref: ../components/schemas/forecast-rating-proposal.yaml
      headers:
        $ref: ../components/headers/ETag-response.yaml
    '400': *malformed
    '401': *unauthorized-empty
    '403': *forbidden-empty
    '404': *not-found-empty
    '406': *not-acceptable-empty
    '413':
      $ref: ../components/responses/payload-too-large.yaml
    '422':
      $ref: ../components/responses/unprocessable.yaml
    '429': *rate-limit-hit
    '500': *unexpected-error-message
    default: *unexpected-error-message
  security:
    - oauth2-primary-flow:
        - write:forecast-proposals
