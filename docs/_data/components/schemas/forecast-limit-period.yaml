period:
  type: object
  properties:
    period-start:
      $ref: ./period-start.yaml
    period-end:
      $ref: ./period-start.yaml
  required:
    - period-start
    - period-end

proposal:
  type: object
  title: Forecasted Period
  description: |

    A Forecasted Period contains proposed limits for a power system object,
    e.g., a segment, that were forecasted for a particular Period in a Forecast
    Window. The status of the proposal as determined by the Clearinghouse is
    also included.

  allOf:
    - $ref: '#/period'
    - $ref: ./limit-proposal.yaml

seasonal-proposal:
  type: object
  description: Proposes the continuous and emergency ratings for the specified Season.
  title: Seasonal Rating Proposal
  allOf:
    - $ref: '#/proposal'
    - type: object
      properties:
        season-name:
          $ref: ./season-name.yaml
        day-night:
          $ref: ./day-night.yaml

seasonal-proposal-slim:
  type: array
  title: Seasonal Period Proposal slim
  maxItems: 20 # (max continuous + emergency ratings) * max num fields in limit type, e.g. MW and p.f.
  minItems: 1
  items:
    type: number
    title: Continuous and Emergency Ratings values
    description: |
      
      Each number in this array corresponds to a value of the continuous and
      emergency ratings for a particular period.  The first values correspond to
      the continuous (normal) rating and the subsequent values correspond to the
      emergency ratings in order of decreasing duration.  The durations are
      defined in the `proposal-header.default-emergency-durations` field.

      The exact number of values in this array is further determined by the
      `proposal-header.limit-type` field. If the `limit-type` is a single value
      like "Apparent Power", e.g., `{"mva":1}`, then the array will have a
      single value for each rating. For example, if there was only one emergency
      duration defined, then the array would have two values, e.g. [50, 55],
      corresponding to a 50MVA continuous rating and 55MVA emergency rating,
      respectively.

      However, if the `limit-type` is an "Active Power and Power Factor", e.g.,
      `{"mw":1, "pf":1}`, then the array will have two values for each rating.
      If we continue with the example of having only one emergency duration
      defined, then the array would have four values.  So instead of
      `[normal_MVA, emergency_MVA]` we have `[normal_MW, normal_pf, emerg_MW,
      emerg_pf]`, e.g., `[50, 1.0, 55, 1.0]`.

proposal-considered:  

  description: Details a proposal that was considered by the Clearinghouse run.
  allOf:
    - $ref: '#/proposal'
    - type: object
      properties:
        source:
          $ref: ./data-provenance.yaml
        proposal-disposition:
          description: |

            Despite a proposal being accepted by TROLIE, the downstream
            Clearinghouse logic may still disqualify a proposal. This might
            occur if, for example, the upper and lower reasonability limits are
            not aligned between TROLIE and the Clearinghouse.  To aid
            troubleshooting, the specification requires that TROLIE instances
            explicitly indicate if the proposal was `Used` in the determination
            of the limit or was `Rejected`.

          type: string
          enum:
            - Used
            - Rejected
      required:
        - source
        - proposal-disposition

snapshot-slim:
  allOf:
    - $ref: '#/period'
    - $ref: ./limit-data.yaml

snapshot-detailed:
  type: object
  description: Period detailed limits including provenance
  allOf:
    - $ref: '#/snapshot-slim'
    - $ref: ./limit-provenance.yaml
