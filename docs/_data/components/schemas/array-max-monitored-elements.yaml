forecast-limits-snapshot:
  type: object
  description: A snapshot of the forecast for a monitoring set.
  properties:
    snapshot-header:
      $ref: ./headers.yaml#/forecast-snapshot-header
    limits: &max
      type: array
      minItems: 0
      maxItems: &max-facilities 50000
      description: Set of forecast limits
      items:
        $ref: 'array-max-forecast-periods.yaml#/forecast-limit-item'

forecast-limits-detailed-snapshot:
  type: object
  description: |

    A detailed snapshot of the forecast for a monitoring set. These details are
    meant to support analysis, archival, and troubleshooting.

  properties:
    snapshot-header:
      $ref: ./headers.yaml#/forecast-snapshot-header
    limits:
      <<: *max
      description: Forecast including provenance information.
      items:
        $ref: 'array-max-forecast-periods.yaml#/forecast-limit-item-detailed'

named-power-system-resources: &psr
  <<: *max
  description: Collection of power system resource names
  items:
    $ref: ./names.yaml

ordered-named-power-system-resources:
  <<: *psr
  description: |

    Ordered array of power system resource names. The order of these items
    determines the order of the ratings proposals in the `ratings` array.

forecast-proposal:
  type: object
  properties:
    proposal-header:
      $ref: ./headers.yaml#/forecast-proposal-header
    ratings:
      <<: *max
      description: Forecasted Ratings
      items:
        $ref: 'array-max-forecast-periods.yaml#/resource-forecast-proposal'
  required:
    - proposal-header
    - ratings

common-proposal-status:
  type: object
  properties:  &common-proposal-status-props
    incomplete-obligation-count:
      description: |

        The number of facilities for this provider whose Ratings Obligation has
        not been met in this forecast window. This number may be larger than the
        size of `incomplete-facilities`, since the latter has a pre-defined
        upper bound for performance and application security reasons.

        ⚠️ **The Ratings Provider should check that this value is zero when they
        believe they have completed their submission process.️** ⚠️

      type: integer
      format: uint16
      minimum: 0
      maximum: *max-facilities

    incomplete-obligations: &incomplete-obligations
      type: array
      description: |

        Indicates which Ratings Obligations have not been fulfilled. The size of
        this set is bounded and may be less than the actual count of unfulfilled
        Obligations indicated in `incomplete-obligation-count`. The intended use
        case for this set is debugging and troubleshooting.

      minItems: 0
      maxItems: 10
      items:
        $ref: ./names.yaml

    invalid-proposal-count:
      description: |

        The number of `resource-forecast-proposal` objects that have been
        determined to be *invalid* during this Forecast Window for the current
        Ratings Provider. This count is provided for troubleshooting,
        establishing trends, and triggering alerts.

      type: integer
      format: uint16
      minimum: 0
      maximum: *max-facilities

    proposal-validation-errors:
      type: array
      description: The most recent validation errors
      minItems: 0
      maxItems: 50
      items:
        type: object
        additionalProperties: false
        description: |
          Validation errors.

          Note to implementors, the property `resource-id` intentionally is not `names`
          as was used in `incomplete-obligations` to mitigate the
          possibility of information disclosure when a Ratings Provider
          submits a proposal for a valid resource that they are not
          permitted to write to. It should be the same `resource-id` that
          the client submitted.

        properties:
          message:
            type: string
            pattern: ^(.){1,500}$
            maxLength: 500
            example: The `resource-forecast-proposal` for `8badf00d` is incomplete.
          resource-id:
            $ref: ./resource-id.yaml

  required:
    - incomplete-obligation-count
    - incomplete-obligations
    - invalid-proposal-count
    - proposal-validation-errors

forecast-proposal-status:
  type: object
  description: |

    Status of the rating provider's forecast proposal relative to the current
    forecast window.  Includes any validation errors encountered while
    processing proposals.

  properties:
    <<: *common-proposal-status-props
    forecast-provider:
      $ref: ./data-provenance.yaml
    begins: # nominates the forecast window
      $ref: ./period-start.yaml

  required:
    - forecast-provider
    - begins
    - incomplete-obligation-count
    - incomplete-obligations
    - invalid-proposal-count
    - proposal-validation-errors

real-time-proposal-status:
  type: object
  description: |
    Status of the rating provider's real-time obligations.
    Includes any validation errors encountered while processing proposals.
  properties:
    <<: *common-proposal-status-props
    ratings-provider:
      $ref: ./data-provenance.yaml
  required:
    - ratings-provider
    - incomplete-obligation-count
    - incomplete-obligations
    - invalid-proposal-count
    - proposal-validation-errors

realtime-limits-snapshot:
  type: object
  description: A snapshot of the realtime limits for a monitoring set.
  properties:
    snapshot-header:
      $ref: ./headers.yaml#/real-time-snapshot-header
    limits:
      <<: *max
      description: Real-time limits
      items:
        $ref: ./realtime-limit-item.yaml

realtime-limits-detailed-snapshot:
  type: object
  description: A snapshot of the realtime limits for a monitoring set.
  properties:
    snapshot-header:
      $ref: ./headers.yaml#/real-time-snapshot-header
    limits:
      <<: *max
      description: Real-time limits including provenance.
      items:
        $ref: ./realtime-limit-item-detailed.yaml

realtime-proposal:
  type: object
  properties:
    proposal-header:
      $ref: ./headers.yaml#/real-time-proposal-header
    ratings:
      <<: *max
      description: Real-Time Ratings Proposals
      items:
        type: object
        description: >
          Real-time ratings data for a segment.
        allOf:
        - type: object
          properties:
            resource-id:
              $ref: ./resource-id.yaml
        - $ref: ./limit-proposal.yaml
        required:
        - resource-id
        - continuous-operating-limit
        - emergency-operating-limits

  required:
  - proposal-header
  - ratings

seasonal-ratings-proposal:
  type: object
  properties:
    proposal-header:
      $ref: ./headers.yaml#/seasonal-proposal-header
    ratings:
      <<: *max
      description: Seasonal Ratings proposals
      items:
        $ref: 'array-max-seasons.yaml#/seasonal-proposals'
  required:
    - proposal-header
    - ratings

seasonal-ratings-proposal-slim:
  type: object
  properties:
    proposal-header:
      $ref: ./headers.yaml#/seasonal-proposal-header-slim
    ratings:
      <<: *max
      description: Seasonal Ratings proposals (slim)
      items:
        $ref: 'array-max-seasons.yaml#/seasonal-proposals-slim'
  required:
    - proposal-header
    - ratings

seasonal-ratings-proposal-status:
  type: object
  description: Seasonal rating proposal status
  properties:
    <<: *common-proposal-status-props
    incomplete-obligations:
      <<: *incomplete-obligations
      description: |

        Indicates which Seasonal Ratings Obligations have not been fulfilled.
        The size of this set is bounded and may be less than the actual count of
        unfulfilled Obligations indicated in `incomplete-obligation-count`.
      items:
        $ref: ./array-max-seasons.yaml#/missing-seasonal-obligation
    provider-info:
      $ref: ./data-provenance.yaml
  required:
    - provider-info
    - incomplete-obligation-count
    - invalid-proposal-count

seasonal-ratings-snapshot:
  type: object
  description: A snapshot of the seasonal ratings for a monitoring set.
  properties:
    snapshot-header:
      $ref: ./headers.yaml#/common-header
    limits:
      <<: *max
      items:
        $ref: ./array-max-seasons.yaml#/seasonal-rating-snapshot-item

temporary-aar-exception-set:
  type: array
  minItems: 0
  maxItems: *max-facilities
  items:
    $ref: ./time-bound-static-ratings.yaml#/temporary-aar-exception

seasonal-override-set:
  type: array
  minItems: 0
  maxItems: *max-facilities
  items:
    $ref: ./time-bound-static-ratings.yaml#/seasonal-override