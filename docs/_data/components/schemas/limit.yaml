type: object
title: Limit
description: |

  Superset of limit types. This schema represents a compromise for the most
  common 4GL programming languages, e.g., Java, C#, etc., that don't support
  algebraic data types and require a discriminator field to deserialize objects
  that have `oneOf` or `anyOf` schemas. Requiring this discriminator for every
  limit is verbose and redundant, while defining the "limit type" in the header
  as a processing instruction is awkward.

  This relaxed schema permits nonsensical representations, so runtime validation
  will be required by both server and client.

properties:
  mw:
    $ref: './limit-types/active-power.yaml#/properties/mw'
  pf:
    $ref: './limit-types/active-power.yaml#/properties/pf'
  mva:
    $ref: './limit-types/apparent-power.yaml#/properties/mva'
  amps:
    $ref: './limit-types/current.yaml#/properties/amps'
  kV-max:
    $ref: './limit-types/voltage.yaml#/overvoltage-threshold/properties/kV-max'
  mvar:
    $ref: './limit-types/reactive-power.yaml#/properties/mvar'
  kV-min:
    $ref: './limit-types/voltage.yaml#/undervoltage-threshold/properties/kV-min'
  voltage-pu-max:
    $ref: './limit-types/voltage.yaml#/overvoltage-threshold-pu/properties/voltage-pu-max'
  voltage-pu-min:
    $ref: './limit-types/voltage.yaml#/undervoltage-threshold-pu/properties/voltage-pu-min'
  base-kV:
    $ref: './limit-types/voltage.yaml#/overvoltage-threshold-pu/properties/base-kV'
