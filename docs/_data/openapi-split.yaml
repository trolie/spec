openapi: 3.0.3
info:
  title: Transmission Ratings and Operating Limits Information Exchange (TROLIE)
  x-logo:
    altText: "TROLIE logo"
    url: "images/TROLIE-horizontal-color.svg"
  description: |

    Pursuant to FERC Order 881, Transmission Providers are required to support
    Ambient Adjusted Ratings (AARs) for most Transmission Facilities in their
    footprint.  In this context, Transmission Providers refers roughly to the
    FERC definition of Transmission Provider as any public utility that owns,
    operates, or controls facilities used for the transmission of electric
    energy in interstate commerce.  This could be said to apply to any entity
    that operates the transmission grid, including ISOs.
    
    For the purpose of this API, Transmission Provider may be assumed to be more
    generic- it is really any entity that can receive AARs.  This API
    specification supports the information exchange necessary to coordinate
    forecasted and base facility ratings between a Transmission Provider and
    Ratings Providers.  The Transmission Provider is assumed to be the host of
    this information exchange.

    A Ratings Provider is defined by this specification to be any entity that
    has pre-coordinated with the Transmission Provider hosting this information
    exchange to be the entity responsible for providing AARs on some set of
    Transmission Facilities known to the Transmission Provider. That
    pre-coordination is out-of-scope for this specification.  The language of
    this API makes a strict distinction between the terms rating and limit.

    A limit is a validated value that is actively used to make operational
    decisions on the power grid.  This could be limits used by the EMS or
    real-time market in real-time, or it could be forecast limits used by
    look-ahead processes such as EMS study applications or the day-ahead market.

    A rating, in contrast, is a calculated value from some process that is input
    to TROLIE (and by extension operating power systems at large) and may be
    selected for use as a limit after validation and dependent on operating
    conditions, time frame and the operational decisions being made.  Seasonal
    ratings, forecast rating proposals, and real-time rating proposals are all
    examples of ratings.

    <img src="images/TROLIE Ratings Provider interactions.excalidraw.png" alt="Primary Interactions with Ratings Provider" />

  version: 1.0.0-wip-realtime-stable
  contact:
    name: TROLIE Maintainers
    email: maintainers@trolie.energy
    url: https://trolie.energy
  license:
    name: Community Specification License 1.0
    url: https://spdx.org/licenses/Community-Spec-1.0.html
servers:
  - url: https://trolie.example.com
tags:

  - name: Real-Time
    description: |

      At the discretion of the TROLIE server owner, Ratings Providers may use
      these functions to exchange ratings within the current hour, either as an
      alternative or supplement to traditional telemetry protocols such as ICCP.

      These are assumed to be real-time ratings, based on measurements of
      ambient conditions as opposed to forecasts.  These ratings will be used by
      Transmission Providers in real-time grid operations processes, such as
      state estimator and real-time markets.  The clearinghouse for real-time
      ratings may be run more frequently than the one for forecast ratings to
      adapt to real-world conditions.

      These ratings may be either AARs or DLRs.

  - name: Forecasting
    description: |

      The operations related to data exchange of forecasted ratings.

      This data exchange specifically includes the 240-hour-ahead forecasted AAR
      data exchange between Ratings Providers and Transmission Providers
      mandated FERC order 881.  It includes the ability to submit rating
      proposals, query back in-use limits, and monitor the health and validity
      of the rating proposal submissions relative the Rating Provider's
      obligations.

  - name: Seasonal
    description: |

      Seasonal ratings are static ratings associated with extended durations,
      typically months. These are used in both planning and operations.
      
      For Ratings Obligations with an AAR Exemption, the power system resource
      will be generally operated to a seasonal rating. For Ratings Obligations
      that *are* satisfied with dynamic ratings, a seasonal rating is still
      required, because the seasonal rating is typically used as a recourse
      rating when a dynamic rating is unavailable for any reason. For example, a
      dynamic rating would likely not be available during a communication outage
      or when determining a forecast rating for the power system resource beyond
      the period for which a forecast has been provided, e.g., beyond the ten
      day forecast required by FERC Order 881.

      A snapshot is provided of the resource ratings configured by the system,
      as well as their relationship to upcoming seasons.

  - name: Seasonal Overrides
    description: |

      A Seasonal Override is an instruction to use a temporary static rating set
      in lieu of any concurrent Seasonal Rating for a given segment.

      A typical use case is a so-called "de-rate" due to temporary clearance
      issue for a transmission facility that is exempt from providing AARs.
      Exempt facilities normally operate against a seasonal rating, yet rather
      than provide a seasonal ratings schedule update, the Ratings Provider
      could send a Seasonal Override. During the provided duration of the
      override, the Transmission Provider would operate to the Seasonal Override
      rather than any ratings that would have been used from the seasonal rating
      schedule.

      In contrast, for a segment that is *not* exempt from providing AARs, the
      Ratings Provider would issue a Temporary AAR Exception to the
      Clearinghouse Provider to address a clearance issue or other temporary
      operating condition that calls for a static rating.

  - name: Temporary AAR Exceptions
    description: >

      A TemporaryAARException is an exception to the AAR process, due to some
      unusual condition on the facility.  This could be caused by a number of
      scenarios:

      * An equipment failure.

      * An unforeseen condition on a related part of the power grid.

      * Some ambient condition that is not part of the model is heating the
        line.

      * Something in the surrounding environment is effecting the amount that a
      line is allowed to sag.  For example, this may occur for lines over rivers
      when very large ships pass under them. 

      The purpose and behavior of a temporary rating is two-fold.

      First, according to FERC, all exceptions to normal rating must be
      documented and kept with history.  The actual numbers for the forecasted
      and real-time feeds may still continue through proposals submitted to
      TROLIE. However, the presence of a temporary rating, and the reason that
      it occurred, must be captured in history regardless of the actual numbers.
      The TemporaryAARException may be held simply for that record- keeping
      purpose.  For the purpose of record-keeping, it may need to be updated
      after an incident has occurred with actual values.  The reason and the end
      date of the effective window may be updated after the object has been
      created, up to a configurable threshold.


      If the targeted segment is getting AAR data feeds, then it may be assumed
      that those AAR data feeds from the RatingsProvider will simply reflect the
      temporary condition.  However, this doesn't always apply, leading to the
      second usage.  Actual rating values may also be provided for the
      TemporaryAARException, when we cannot expect AAR feeds otherwise.  This
      occurs in two scenarios:

      1.  It is required when the Transmission Provider is generating forecast
      rating proposals, from lookup tables for example.  There is no external
      AAR data feed, and the Transmission Provider wouldn't otherwise know how
      to forecast the ratings given this temporary condition.  For these
      scenarios, a complete rating value set MUST be provided.

      2.  For facilities where AAR data is provided, it is possible that the AAR
      data feed could be down for some reason.  Therefore, this provides a
      placeholder set of numbers until the AAR data feed is repaired.

  - name: limit-type
    description: <SchemaDefinition schemaRef="#/components/schemas/limit" />
    x-displayName: Limit Type

x-tagGroups:
  - name: Operations
    tags:
    - Real-Time
    - Forecasting
    - Seasonal
    - Seasonal Overrides
    - Temporary AAR Exceptions
  - name: Common Schemas
    tags:
    - limit-type

paths:
  /limits/forecast-snapshot:
    $ref: paths/limits_forecast-snapshot.yaml
  /rating-proposals/realtime:
    $ref: paths/rating-proposals_realtime.yaml

  /limits/realtime-snapshot:
    $ref: paths/limits_realtime-snapshot.yaml
  /rating-proposals/forecast:
    $ref: paths/rating-proposals_forecasts.yaml

  /seasonal-ratings/snapshot:
    $ref: paths/seasonal-ratings-snapshot.yaml
  /rating-proposals/seasonal:
    $ref: paths/rating-proposals_seasonal.yaml

  /seasonal-overrides:
    $ref: paths/seasonal-overrides.yaml
  /seasonal-overrides/{id}:
    $ref: paths/seasonal-overrides_{id}.yaml

  /temporary-aar-exceptions:
    $ref: paths/temporary-aar-exceptions.yaml
  /temporary-aar-exceptions/{id}:
    $ref: paths/temporary-aar-exceptions_{id}.yaml


components:
  responses:

    # No content responses
    '304': &rate-limited
      description: Not Modified.
      headers: &rate-limited-headers
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    '204':
      description: Operation successful. No Content.
      headers:
        <<: *rate-limited-headers
        ETag:
          $ref: "#/components/headers/ETag"

    # responses allowing content
    '400-problem':
      <<: *rate-limited
      description: Malformed request
      content: &problem
        "application/problem+json":
          schema:
            $ref: '#/components/schemas/problem'
        # helpful errors when the request doesn't specify a TROLIE media type
        "application/json":
          schema:
            $ref: '#/components/schemas/problem'
    '401-empty':
      <<: *rate-limited
      description: Unauthorized
      content: &empty
        application/*:
          schema:
            $ref: "#/components/schemas/empty"
    '403-empty':
      <<: *rate-limited
      content: *empty
      description: Access denied
    '404-empty':
      <<: *rate-limited
      description: Not Found
      content: *empty
    '406-empty':
      <<: *rate-limited
      description: Not Acceptable (Content negotiation failed)
      content: *problem
    '410-empty':
      <<: *rate-limited
      description: Gone
      content: *empty
    '413-empty':
      <<: *rate-limited
      description: Payload too large
      content: *empty
    '415-problem':
      description: Unsupported media type
      headers:
        <<: *rate-limited-headers
        Accept:
          schema:
            type: string
            pattern: '^((application\/vnd\.trolie\.(?:[a-z-]+)\.v\d+\+json(;q=(0\.\d+|1\.0))?))(\,\s*(application\/vnd\.trolie\.(?:[a-z-]+)\.v\d+\+json(;q=(0\.\d+|1\.0))?))*$'
            maxLength: 500
          examples:
            "Forecast Proposal":
              summary: Used to update the area-wide forecast
              value: "application/vnd.trolie.rating-forecast-proposal.v1+json"
            "Real-Time Proposal":
              summary: Used to update the area-wide nowcast
              value: "application/vnd.trolie.rating-realtime-proposal.v1+json"
        Accept-Encoding:
          description: |
            The server must support and prefer Brotli yet must accept gzip for
            compatibility.
          schema:
            type: string
            enum:
              - "br,gzip"
      content: *problem
    '422-problem':
      <<: *rate-limited
      description: Unprocessable content
      content: *problem
    '429-empty':
      description: Too many requests (rate limiting)
      headers:
        <<: *rate-limited-headers
        Retry-After:
          $ref: "#/components/headers/Retry-After"
      content: *empty
    '500-empty':
      description: An unexpected error occurred
      headers: *rate-limited-headers
      content: *empty

  schemas:
    empty:
      description: Intended to proactively avoid information disclosure
      type: string
      nullable: true
      maxLength: 0
      pattern: ^$
      example: ""

    problem:
      description: See [RFC9457](https://www.rfc-editor.org/rfc/rfc9457#appendix-A).
      type: object
      properties:
        type: &uri-reference
          type: string
          format: "uri-reference"
          maxLength: 2048
          description: |
            A URI reference that identifies the problem type.
            See [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457#name-type)
          example: "https://iana.org/assignments/http-problem-types#date"
        title: &description
          type: string
          format: free-text
          maxLength: 500
          description: |
            A short, human-readable summary of the problem type.
            See [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457#name-title)
        status:
          type: number
          minimum: 100
          maximum: 599
          description: |
            The HTTP status code generated by the origin server for this occurrence of the problem.
        detail:
          <<: *description
          description:
            A human-readable explanation specific to this occurrence of the problem.
            See [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457#name-detail)
        instance:
          <<: *uri-reference
          description: |
            A URI reference that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
            See [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457#name-status)
      required: [ type ]

  headers:
    ETag:
      description: >
        An opaque, unique identifier--typically a hash value--for a specific
        version of a resource. The modeled resource state is what is versioned,
        not the content of any particular representation. The server MUST use a
        strong validator so that the same ETag is returned regardless of the
        media type of the representation.
      schema:
        type: string
        format: hash
        maxLength: 256
        additionalProperties: false

    X-Rate-Limit-Limit:
      description: The number of allowed requests in the current period
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 1000
    X-Rate-Limit-Remaining:
      description: The number of remaining requests in the current period
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 1000
    X-Rate-Limit-Reset:
      description: The number of seconds left in the current period
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 1000
    Retry-After:
      schema:
        type: object
        oneOf:
          - type: integer
            format: int32
            minimum: 0
            maximum: 60
            example: 60
            description: The seconds to delay after the response is received.
          # TODO: the HTTP spec allows for this but we probably should not support it
          - type: string
            pattern: "^[A-Z][a-z]{2}, \\d{2} [A-Z][a-z]{2} \\d{4} \\d{2}:\\d{2}:\\d{2} GMT$"
            maxLength: 30
            example: 'Wed, 21 Oct 2022 07:28:00 GMT'
            description: A date after which to retry.
  securitySchemes:
    oauth2-primary-flow:
      type: oauth2
      description: Support RFC8725 JWT tokens.
      flows:
        clientCredentials:
          tokenUrl: https://no-server/oauth2
          scopes:
            read:forecast-proposals: Read Forecast rating proposals
            read:realtime-proposals: Read real-time rating proposals
            read:seasonal-proposals: Read seasonal rating proposals
            read:temporary-aar-exceptions: Read temporary AAR exceptions
            read:seasonal-overrides: Read seasonal overrides
            write:forecast-proposals: Submit forecasted ratings
            write:realtime-proposals: Submit realtime ratings
            write:seasonal-proposals: Submit seasonal ratings
            write:temporary-aar-exceptions: Write temporary AAR exceptions
            write:seasonal-overrides: Write seasonal overrides
            read:operating-snapshot: >-
              Read the ratings and limits snapshots in-use by the transmission
              provider
security:
  - oauth2-primary-flow: []
